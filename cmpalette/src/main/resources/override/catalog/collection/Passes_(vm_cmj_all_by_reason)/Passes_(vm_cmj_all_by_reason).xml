<collection name="Passes_(vm_cmj_all_by_reason)" idField="id" replace="runtime">
    <prototype>
        <![CDATA[select
	id,
	created_date,
	updated_date,
	module,
	self_1,
	self_2,
	self_3,
	passNumber,
	reason,
	issuanceDate,
	forWho,
	toWho,
	carNumber,
	carModel
from
	(
	select
		rkkbase.id,
		rkkbase.created_date,
		rkkbase.updated_date,
		rkkbase.module as module,
		'<id>' as self_1,
		':' as self_2,
		'</>' as self_3,
		(
		select
			tfs."value" as v
		from
			tn_field
		join tn_field_string tfs on
			tn_field.access_object_id = tfs.id
		where
			tn_field."owner" = rkkbase.id
			and tn_field.owner_type = rkkbase.id_type
			and tn_field.cmjfield = 'passNumber') as passNumber,
		(
		select
			tfs."value" as v
		from
			tn_field
		join tn_field_string tfs on
			tn_field.access_object_id = tfs.id
		where
			tn_field."owner" = rkkbase.id
			and tn_field.owner_type = rkkbase.id_type
			and tn_field.cmjfield = 'reason') as reason,
        date((SELECT tfs."value" as v
                         FROM tn_field
                         JOIN tn_field_dateonly tfs on tn_field.access_object_id = tfs.id
                         WHERE tn_field."owner" = rkkbase.id and
                         tn_field.owner_type = rkkbase.id_type
                         and tn_field.cmjfield = 'issuanceDate')) as issuanceDate,
		coalesce((select string_agg(SPLIT_PART(tfs.value, '%', 1), ',') as v
		 from tn_field
		 join tn_field_string tfs on tn_field.access_object_id = tfs.id
		 where tn_field."owner" = rkkbase.id and tn_field.cmjfield = 'Tn$_forWho'), 'Не указано'
		) as forWho,
				coalesce((select string_agg(SPLIT_PART(tfs.value, '%', 1), ',') as v
		 from tn_field
		 join tn_field_string tfs on tn_field.access_object_id = tfs.id
		 where tn_field."owner" = rkkbase.id and tn_field.cmjfield = 'Tn$_toWho'), 'Не указано'
		) as toWho,
		(
		select
			tfs."value" as v
		from
			tn_field
		join tn_field_string tfs on
			tn_field.access_object_id = tfs.id
		where
			tn_field."owner" = rkkbase.id
			and tn_field.owner_type = rkkbase.id_type
			and tn_field.cmjfield = 'carNumber') as carNumber,
		(
		select
			tfs."value" as v
		from
			tn_field
		join tn_field_string tfs on
			tn_field.access_object_id = tfs.id
		where
			tn_field."owner" = rkkbase.id
			and tn_field.owner_type = rkkbase.id_type
			and tn_field.cmjfield = 'carModel') as carModel
	from
		F_DP_Intrkk internalrkk
	join f_dp_rkk rkk on
		rkk.id = internalrkk.id
	join f_dp_rkkbase rkkbase on
		rkkbase.id = rkk.id
	where
		rkkbase.isdeleted <> 1
		and rkk.regnumcnt is null
		   ) s
	where
		1 = 1 ::where-clause
            ]]>
    </prototype>
    <counting-prototype>
        <![CDATA[
            SELECT
				COUNT(1)
                FROM (
	select
		rkkbase.id,
		rkkbase.created_date,
		rkkbase.updated_date,
		rkkbase.module as module,
		'<id>' as self_1,
		':' as self_2,
		'</>' as self_3,
		(
		select
			tfs."value" as v
		from
			tn_field
		join tn_field_string tfs on
			tn_field.access_object_id = tfs.id
		where
			tn_field."owner" = rkkbase.id
			and tn_field.owner_type = rkkbase.id_type
			and tn_field.cmjfield = 'passNumber') as passNumber,
		(
		select
			tfs."value" as v
		from
			tn_field
		join tn_field_string tfs on
			tn_field.access_object_id = tfs.id
		where
			tn_field."owner" = rkkbase.id
			and tn_field.owner_type = rkkbase.id_type
			and tn_field.cmjfield = 'reason') as reason,
        (
        SELECT tfs."value" as v
                         FROM tn_field
                         JOIN tn_field_dateonly tfs on tn_field.access_object_id = tfs.id
                         WHERE tn_field."owner" = rkkbase.id and
                         tn_field.owner_type = rkkbase.id_type
                         and tn_field.cmjfield = 'issuanceDate') as issuanceDate,
		coalesce((select string_agg(SPLIT_PART(tfs.value, '%', 1), ',') as v
		 from tn_field
		 join tn_field_string tfs on tn_field.access_object_id = tfs.id
		 where tn_field."owner" = rkkbase.id and tn_field.cmjfield = 'Tn$_forWho'), 'Не указано'
		) as forWho,
				coalesce((select string_agg(SPLIT_PART(tfs.value, '%', 1), ',') as v
		 from tn_field
		 join tn_field_string tfs on tn_field.access_object_id = tfs.id
		 where tn_field."owner" = rkkbase.id and tn_field.cmjfield = 'Tn$_toWho'), 'Не указано'
		) as toWho,
		(
		select
			tfs."value" as v
		from
			tn_field
		join tn_field_string tfs on
			tn_field.access_object_id = tfs.id
		where
			tn_field."owner" = rkkbase.id
			and tn_field.owner_type = rkkbase.id_type
			and tn_field.cmjfield = 'carNumber') as carNumber,
		(
		select
			tfs."value" as v
		from
			tn_field
		join tn_field_string tfs on
			tn_field.access_object_id = tfs.id
		where
			tn_field."owner" = rkkbase.id
			and tn_field.owner_type = rkkbase.id_type
			and tn_field.cmjfield = 'carModel') as carModel
	from
		F_DP_Intrkk internalrkk
	join f_dp_rkk rkk on
		rkk.id = internalrkk.id
	join f_dp_rkkbase rkkbase on
		rkkbase.id = rkk.id
	where
		rkkbase.isdeleted <> 1
		and rkk.regnumcnt is null
		   ) s
	where
		1 = 1 ::where-clause
            ]]>
    </counting-prototype>
    <filter name="MODULE">
        <criteria placeholder="where-clause">
            <![CDATA[
                    Module = {0}
                ]]>
        </criteria>
    </filter>
    <filter name="self">
        <criteria placeholder="where-clause"><![CDATA[ Module = {0} and id = {1} ]]></criteria>
    </filter>
    <filter name="created_date">
        <criteria placeholder="where-clause">
            <![CDATA[
                   cast(created_date as date) = cast({0} as date)
                ]]>
        </criteria>
    </filter>
    <!-- 	passNumber,
	reason,
	giveDateTime,
	forWho,
	toWho,
	carNumber,
	carModel-->
    <filter name="passNumber">
        <criteria placeholder="where-clause">
            <![CDATA[
                    passNumber = {0}
                ]]>
        </criteria>
    </filter>
    <filter name="reason">
        <criteria placeholder="where-clause">
            <![CDATA[
                    reason = {0}
                ]]>
        </criteria>
    </filter>
    <filter name="issuanceDate">
        <criteria placeholder="where-clause">
            <![CDATA[
                   issuanceDate = {0}
                ]]>
        </criteria>
    </filter>
    <filter name="forWho">
        <criteria placeholder="where-clause">
            <![CDATA[
                    forWho = {0}
                ]]>
        </criteria>
    </filter>
    <filter name="toWho">
        <criteria placeholder="where-clause">
            <![CDATA[
                    toWho = {0}
                ]]>
        </criteria>
    </filter>
    <filter name="carNumber">
        <criteria placeholder="where-clause">
            <![CDATA[
                    carNumber = {0}
                ]]>
        </criteria>
    </filter>
    <filter name="carModel">
        <criteria placeholder="where-clause">
            <![CDATA[
                    carModel = {0}
                ]]>
        </criteria>
    </filter>
</collection>